create table hu (is_flex_hu boolean default true not null, status integer not null, version smallint not null, approval_time timestamp(6), creation_time timestamp(6) not null, id bigint generated by default as identity, modification_time timestamp(6), class_type varchar(255) not null, code varchar(255) not null, created_by varchar(255) not null, description varchar(255) not null, level_type varchar(255) not null, long_name varchar(255) not null, modified_by varchar(255), short_name varchar(255) not null, primary key (id), constraint uix_hu_code unique (code));
create table hu_measured_values (height_value float(53) not null, length_value float(53) not null, version smallint not null, volume_value float(53) not null, weight_value float(53) not null, width_value float(53) not null, approval_time timestamp(6), creation_time timestamp(6) not null, hu_id bigint not null, id bigint generated by default as identity, modification_time timestamp(6), created_by varchar(255) not null, height_unit varchar(50) not null, length_unit varchar(50) not null, metric_system varchar(50) not null, modified_by varchar(255), volume_unit varchar(50) not null, weight_unit varchar(50) not null, width_unit varchar(50) not null, primary key (id));
create table pu (status integer not null, version smallint not null, approval_time timestamp(6), creation_time timestamp(6) not null, id bigint generated by default as identity, modification_time timestamp(6), class_type varchar(255) not null, code varchar(255) not null, created_by varchar(255) not null, description varchar(255) not null, level_type varchar(255) not null, long_name varchar(255) not null, modified_by varchar(255), short_name varchar(255) not null, primary key (id), constraint uix_pu_code unique (code));
create table pu_measured_values (height_value float(53) not null, length_value float(53) not null, version smallint not null, volume_value float(53) not null, weight_value float(53) not null, width_value float(53) not null, approval_time timestamp(6), creation_time timestamp(6) not null, id bigint generated by default as identity, modification_time timestamp(6), pu_id bigint not null, created_by varchar(255) not null, height_unit varchar(50) not null, length_unit varchar(50) not null, metric_system varchar(50) not null, modified_by varchar(255), volume_unit varchar(50) not null, weight_unit varchar(50) not null, width_unit varchar(50) not null, primary key (id));
create table uom (is_inventory boolean default true not null, is_production boolean default true, is_purchase boolean default false, is_sales boolean default true, status integer not null, version smallint not null, approval_time timestamp(6), creation_time timestamp(6) not null, id bigint generated by default as identity, modification_time timestamp(6), bulk_code varchar(255) not null, class_type varchar(255) not null, code varchar(255) not null, created_by varchar(255) not null, description varchar(255) not null, level_type varchar(255) not null, long_name varchar(255) not null, modified_by varchar(255), short_name varchar(255) not null, primary key (id), constraint uix_uom_code unique (code));
create table uom_hu_link (maximum_quantity integer not null, minimum_quantity integer not null, version smallint not null, approval_time timestamp(6), creation_time timestamp(6) not null, hu_id bigint not null, modification_time timestamp(6), uom_id bigint not null, created_by varchar(255) not null, modified_by varchar(255), primary key (hu_id, uom_id));
create table uom_measured_values (height_value float(53) not null, length_value float(53) not null, version smallint not null, volume_value float(53) not null, weight_value float(53) not null, width_value float(53) not null, approval_time timestamp(6), creation_time timestamp(6) not null, id bigint generated by default as identity, modification_time timestamp(6), uom_id bigint not null, created_by varchar(255) not null, height_unit varchar(50) not null, length_unit varchar(50) not null, metric_system varchar(50) not null, modified_by varchar(255), volume_unit varchar(50) not null, weight_unit varchar(50) not null, width_unit varchar(50) not null, primary key (id));
create table uom_pu_link (maximum_quantity integer not null, minimum_quantity integer not null, version smallint not null, approval_time timestamp(6), creation_time timestamp(6) not null, modification_time timestamp(6), pu_id bigint not null, uom_id bigint not null, created_by varchar(255) not null, modified_by varchar(255), primary key (pu_id, uom_id));
create table uom_self_link (quantity integer not null, version smallint not null, approval_time timestamp(6), creation_time timestamp(6) not null, from_id bigint not null, modification_time timestamp(6), to_id bigint not null, created_by varchar(255) not null, modified_by varchar(255), primary key (from_id, to_id));
create index idx_hu_short_name on hu (short_name);
create index idx_hu_long_name on hu (long_name);
create index idx_hu_level_type on hu (level_type);
create index idx_hu_code on hu (code);
create index idx_hu_class_type on hu (class_type);
create index idx_pu_short_name on pu (short_name);
create index idx_pu_long_name on pu (long_name);
create index idx_pu_level_type on pu (level_type);
create index idx_pu_code on pu (code);
create index idx_pu_class_type on pu (class_type);
create index idx_uom_short_name on uom (short_name);
create index idx_uom_long_name on uom (long_name);
create index idx_uom_level_type on uom (level_type);
create index idx_uom_code on uom (code);
create index idx_uom_class_type on uom (class_type);
alter table if exists hu_measured_values add constraint hu_measured_values_fk foreign key (hu_id) references hu;
alter table if exists pu_measured_values add constraint pu_measured_values_fk foreign key (pu_id) references pu;
alter table if exists uom_hu_link add constraint conversion_from_uom_fk foreign key (uom_id) references uom;
alter table if exists uom_hu_link add constraint conversion_to_hu_fk foreign key (hu_id) references hu;
alter table if exists uom_measured_values add constraint uom_measured_values_fk foreign key (uom_id) references uom;
alter table if exists uom_pu_link add constraint conversion_from_uom_fk foreign key (uom_id) references uom;
alter table if exists uom_pu_link add constraint conversion_to_pu_fk foreign key (pu_id) references pu;
alter table if exists uom_self_link add constraint conversion_from_uom_fk foreign key (from_id) references uom;
alter table if exists uom_self_link add constraint conversion_to_uom_fk foreign key (to_id) references uom;
